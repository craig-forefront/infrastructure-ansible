---
# code: language=ansible
# tasks file for ignite
- name: Install required packages
  become: true
  ansible.builtin.package:
    name: "{{ ignite_install_packages }}"
    state: present
  tags:
    - ignite_install_packages

- name: Install mount-s3 package from .rpm file
  become: true
  ansible.builtin.dnf:
    name: "{{ ignite_s3_mount }}"
    state: present
    update_cache: true
    disable_gpg_check: true

- name: Install python packages
  become: true
  ansible.builtin.pip:
    name: "{{ ignite_python_packages }}"
  tags:
    - ignite_python_packages

- name: Ensure user ignite exists
  become: true
  ansible.builtin.user:
    name: "{{ ignite_user }}"
    shell: /bin/bash
  register: user_info

- name: Ensure ignite directories exist
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    state: directory
    recurse: false
    mode: "0755"
  loop:
    - "{{ ignite_snapshots_dir }}"
    - "{{ ignite_work_dir }}"
    - "{{ ignite_log_dir }}"
    - "{{ ignite_conf_dir }}"
    - "{{ ignite_data_dir }}"
    - "{{ ignite_pid_dir }}"

- name: Get archive from S3
  amazon.aws.s3_object:
    bucket: "{{ ignite_binary_bucket }}"
    object: "{{ ignite_binary_prefix }}{{ ignite_binary_name }}"
    dest: "/tmp/{{ ignite_binary_name }}"
    mode: get

- name: Mount EFS Snapshot directory
  become: true
  ansible.posix.mount:
    src: "{{ ignite_efs_id }}"
    path: "{{ ignite_snapshots_dir }}"
    state: mounted
    fstype: efs

- name: Rertieve and unarchive ignite
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/{{ ignite_binary_name }}"
    dest: "/tmp"
    mode: "0755"
    list_files: true
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    remote_src: true
  register: unzip

- name: Rename ignite base directory
  become: true
  ansible.builtin.copy:
    src: "{{ unzip.dest }}/{{ unzip.files[0] }}"
    dest: "{{ ignite_base_dir }}"
    mode: "0755"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    remote_src: true

- name: Copy content of directory 'files'
  become: true
  ansible.builtin.copy:
    src: "{{ ignite_optional_libs_dir }}/{{ item }}"
    dest: "{{ ignite_libs_dir }}"
    mode: "0755"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    remote_src: true
  loop: "{{ ignite_plugins }}"

- name: Copy ignite config file to conf directory
  become: true
  ansible.builtin.template:
    src: "config.xml.j2"
    dest: "{{ ignite_config_file }}"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    mode: "0644"

- name: Copy ignite log file config to conf directory
  become: true
  ansible.builtin.template:
    src: "log4j2.xml.j2"
    dest: "{{ ignite_log_config_file }}"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    mode: "0644"

- name: Copy ignite service definition file to system directory
  become: true
  ansible.builtin.template:
    src: "ignite.service.j2"
    dest: "{{ ignite_service_file }}"
    owner: "{{ ignite_user }}"
    group: "{{ ignite_group }}"
    mode: "0644"

- name: Reload systemd since we just added a new ignite service
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Enable and start the ignite service
  become: true
  ansible.builtin.systemd_service:
    state: started
    name: ignite
    enabled: true
